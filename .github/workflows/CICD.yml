name: CI/CD pipeline
on:
    push:
        branches:
            - 'main'
jobs:
    CI:
        name: Continuous integration
        runs-on: ubuntu-22.04
        env:
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST: ${{ secrets.DB_HOST }}
            POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        services:
            postgres_db:
                image: postgres:14
                env:
                    POSTGRES_DB: ${{ env.POSTGRES_DB }}
                    POSTGRES_USER: ${{ env.POSTGRES_USER }}
                    POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
                ports:
                -   5432:5432
                options: |
                    --health-cmd pg_isready
                    --health-interval 2s
                    --health-retries 5
        steps:
        -   name: Установка репозитория
            uses: actions/checkout@v4.1.6
            with:
                repository: Nikilandgelo/devops_django
        -   name: Установка Python
            uses: actions/setup-python@v5.1.0
            with:
                python-version: '3.10'
        -   name: Установка зависимостей
            run: pip install -r requirements.txt
        -   name: Установка линтера flake8 и проверка кода на синтаксические ошибки
            run: |
                pip install flake8
                flake8 ./3.4-django-testing --exclude=**migrations/,*.ini,.* --max-line-length 91
        -   name: Запуск тестов
            run: cd 3.4-django-testing && pytest
        -   name: Общее покрытие тестами
            run: cd 3.4-django-testing && pytest --cov=.
    CD:
        name: Continuous delivery
        runs-on: ubuntu-22.04
        needs: CI
        steps:
        -   name: Настройка SSH папки внутри юзера runner
            run: |
                mkdir ~/.ssh
                echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa
                chmod 700 ~/.ssh/id_rsa
                ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        -   name: Подключение через SHH
            run: ssh ${{ secrets.NAME_ON_SERVER }}@${{ secrets.SERVER_IP }}
        -   name: Тестирую свое местонахождение
            run: ls -a