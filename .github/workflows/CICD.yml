name: CI/CD pipeline
on:
    push:
        branches:
            - 'main'
jobs:
    CI:
        name: Continuous integration
        runs-on: ubuntu-latest

        # по факту эта БД Postgres с Докера вообще не нужна,
        # потому что pytest сам создает тестовую свою, но если unit тесты или
        # тесты которые требуют реальной БД, то тогда имеет смысл
        env:
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        services:
            postgres_db:
                image: postgres:14
                env:
                    POSTGRES_DB: ${{ env.POSTGRES_DB }}
                    POSTGRES_USER: ${{ env.POSTGRES_USER}}
                    POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
                options: >-
                    --health-cmd pg_isready
                    --health-interval 2s
                    --health-retries 5

        steps:
        -   name: Установка репозитория
            uses: actions/checkout@v4.1.6
            with:
                repository: Nikilandgelo/devops_django
        -   name: Установка Python
            uses: actions/setup-python@v5.1.0
            with:
                python-version: '3.10'
                cache: 'pip'
        -   name: Установка зависимостей
            run: pip install -r requirements.txt
        -   name: Установка линтера flake8 и проверка кода на синтаксические ошибки
            run: |
                pip install flake8
                flake8 ./3.4-django-testing --exclude=**migrations/,*.ini,.* --max-line-length 91
        -   name: Запуск тестов
            run: cd 3.4-django-testing && pytest
        -   name: Общее покрытие тестами
            run: cd 3.4-django-testing && pytest --cov=.
    # CD:
    #     name: Деплой изменений на сервер
    #     runs-on: ubuntu-latest
    #     needs: CI